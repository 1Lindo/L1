/*
К каким негативным последствиям может привести данный фрагмент кода, и как это исправить? Приведите корректный пример реализации.

var justString string
func someFunc() {
  v := createHugeString(1 << 10)
  justString = v[:100]
}

func main() {
  someFunc()
}

*/

/*
Данный фрагмент кода может привести к утечке памяти, тк переменная v содержит огромную строку
из которой извлекаются ТОЛЬКО первые 100 символов и сохраняются в justString, а ОСТАВШАЯСЯ часть строки не будет освобождена,
что может привести к утечке памяти.

Нужно использовать срез, которые НЕ создает копию данных, а лишь ПРЕДОСТАВЛЯЮТ ДОСТУП к части исходного массива.

Также можно избежать использования глобальной переменной justString, передав ее в качестве параметра в someFunc().
В этом случае функция someFunc() изменяет значение переменной justString через переданный указатель,
а глобальных переменных не используется.


*/

package main

//func someFunc(s *string) {
//	v := createHugeString(1 << 10)
//	*s = v[:100:100] // создание среза с указанием capacity
//}
//
//func main() {
//	var justString string
//	someFunc(&justString)
//	// использование justString
//}
