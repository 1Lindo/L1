/*
Разработать программу, которая будет последовательно отправлять значения в канал, а с другой стороны канала — читать.
По истечению N секунд программа должна завершаться.
*/

/*
Создаем канал ch для передачи значений.
Запускаем две горутины: writer и reader.
В горутине writer отправляем значения от 0 до 9 в ch каждую секунду.
В горутине reader мы читаем значения из канала и выводим их на экран.
Ждем 10 секунд с помощью функции time.Sleep, чтобы программа успела отправить все значения в канал и прочитать их.
После этого программа завершается автоматически.
*/

package main

import (
	"fmt"
	"time"
)

func writer(ch chan int) {
	for i := 0; i < 10; i++ {
		ch <- i
		time.Sleep(time.Second)
	}
	close(ch)
} //Горутина для записи

func reader(ch chan int) {
	for {
		msg, ok := <-ch
		if !ok {
			break
		}
		fmt.Println(msg)
	}
} //Горутина для чтения

func main() {
	ch := make(chan int) //Создаем канал

	go writer(ch)
	go reader(ch)

	time.Sleep(10 * time.Second)
}
